#
#
#

Samsung S3C2410 processor
CONFIG_ARCH_S3C2410
 Say Y here if you are using the SAMSUNG ELECTRONICS(R) S3C2410
  Microprocessor.

CONFIG_S3C2410_NAND_BOOT
 This allows you to boot from NAND flash.

CONFIG_S3C2410_AMD_BOOT
 This allows you to boot from AMD flash.

CONFIG_ARCH_SA1100
 Say Y here if you are using the Intel(R) StrongARM(R) SA-1110
  Microprocessor.

Gamepark: OS Switching
CONFIG_S3C2400_GAMEPARK_OSSWITCH
  This provides support for OS swiching with GP32OS on GAMEPARK board
  which is used to make TEXTADDR to 0x00100000.

Gamepark: Run on the ram
CONFIG_S3C2400_GAMEPARK_ON_RAM
  This allows you to run bootloader on the ram which is used to make
  TEXTADDR to 0x0c000000.

#
# General setup
#
CPU Data Cache On
CONFIG_CPU_D_CACHE_ON
  Say Y here if you want to use data cache of the CPU.
  But it is not stable, say 'N'.

CPU Instruction Cache On
CONFIG_CPU_I_CACHE_ON
  Say Y here if you want to use instruction cache of the CPU.
  But it is not stable, say 'N'.

Power Management
CONFIG_PM
  This provides support for power management by linux kernel.
  Normally, you should say 'Y'.

Parse vivi private data from MTD
CONFIG_PARSE_PRIV_DATA
  If you say Y here, vivi will be able to get MTD partition information
  from MTD.
  But if you say N here, vivi will use default parameters in the vivi's code.
  Normally, you should say 'Y'.

Use user-defined parameter block
CONFIG_USE_PARAM_BLK
  This provides you can reassign vivi's parameter information address
  of flash block.
  If you say N here, parameter block will be located in last block
  of the flash.

RAM test
CONFIG_MEMORY_RAM_TEST
  This turns DRAM memory test.

Test mode
CONFIG_TEST
  If you say Y here, vivi can provide own test feature.

Dispaly progress bar
CONFIG_MSG_PROGRESS
  This allows to display progress bar while program the flash.

#
# Serial Port
#
CONFIG_SERIAL_TERM
  This provides support for serial terminal.
  You should say 'Y'.

CONFIG_SERIAL_GETCMD_STD
  If you want to use simple command input method, say 'Y'.

CONFIG_SERIAL_GETCMD_EXT
  This turns command history feature.
  Normally, you should say 'Y'.

CONFIG_SERIAL_TERM_PROMPT
  This allows you to set the boot prompt which is limited by 16 characters.  

#
# Memory Techonology Device
#

Memory Technology Device (MTD) support 
CONFIG_MTD
  Memory Technology Devices are flash, RAM and similar chips, often
  used for solid state file systems on embedded devices. This option
  will provide the generic support for MTD drivers to register
  themselves with the kernel and for potential users of MTD devices 
  to enumerate the devices which are present and obtain a handle on
  them. It will also allow you to select individual drivers for 
  particular hardware and users of MTD devices. If unsure, say N.

MTD debugging support 
CONFIG_MTD_DEBUG
  This turns on low-level debugging for the entire MTD sub-system.
  Normally, you should say 'N'.

MTD partitioning support 
CONFIG_MTD_PARTITIONS
  If you have a device which needs to divide its flash chip(s) up
  into multiple 'partitions', each of which appears to the user as 
  a separate MTD device, you require this option to be enabled. If
  unsure, say 'Y'.

  Note, however, that you don't need this option for the DiskOnChip
  devices. Partitioning on NFTL 'devices' is a different - that's the
  'normal' form of partitioning used on a block device.

Detect flash chips by Common Flash Interface (CFI) probe
CONFIG_MTD_CFI
  The Common Flash Interface specification was developed by Intel,
  AMD and other flash manufactures that provides a universal method
  for probing the capabilities of flash devices. If you wish to
  support any device that is CFI-compliant, you need to enable this
  option. Visit <http://www.amd.com/products/nvd/overview/cfi.html>
  for more information on CFI.

CFI Advanced configuration options
CONFIG_MTD_CFI_ADV_OPTIONS
  If you need to specify a specific endianness for access to flash
  chips, or if you wish to reduce the size of the kernel by including
  support for only specific arrangements of flash chips, say 'Y'. This
  option does not directly affect the code, but will enable other
  configuration options which allow you to do so.

  If unsure, say 'N'.

Specific CFI Flash geometry selection
CONFIG_MTD_CFI_GEOMETRY
  This option does not affect the code directly, but will enable
  some other configuration options which would allow you to reduce
  the size of the kernel by including support for only certain
  arrangements of CFI chips. If unsure, say 'N' and all options
  which are supported by the current code will be enabled.

Support 8-bit buswidth
CONFIG_MTD_CFI_B1
  If you wish to support CFI devices on a physical bus which is
  8 bits wide, say 'Y'.

Support 16-bit buswidth
CONFIG_MTD_CFI_B2
  If you wish to support CFI devices on a physical bus which is
  16 bits wide, say 'Y'.

Support 32-bit buswidth
CONFIG_MTD_CFI_B4
  If you wish to support CFI devices on a physical bus which is
  32 bits wide, say 'Y'.

Support 1-chip flash interleave
CONFIG_MTD_CFI_I1
  If your flash chips are not interleaved - i.e. you only have one
  flash chip addressed by each bus cycle, then say 'Y'.

Support 2-chip flash interleave
CONFIG_MTD_CFI_I2
  If your flash chips are interleaved in pairs - i.e. you have two
  flash chips addressed by each bus cycle, then say 'Y'.

Support 4-chip flash interleave
CONFIG_MTD_CFI_I4
  If your flash chips are interleaved in fours - i.e. you have four
  flash chips addressed by each bus cycle, then say 'Y'.

CFI support for Intel/Sharp Extended Command Set chips
CONFIG_MTD_CFI_INTELEXT
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for one of those command sets, used on Intel
  StrataFlash and other parts.

CFI support for AMD/Fujitsu Standard Command Set chips
CONFIG_MTD_CFI_AMDSTD
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for one of those command sets, used on chips
  chips including the AMD Am29LV320.

CFI support for Intel/Sharp Standard Commands
CONFIG_MTD_CFI_INTELSTD
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for one of those command sets.

pre-CFI Sharp chip support
CONFIG_MTD_SHARP
  This option enables support for flash chips using Sharp-compatible
  commands, including some which are not CFI-compatible and hence
  cannot be used with the CONFIG_MTD_CFI_INTELxxx options.

AMD compatible flash chip support (non-CFI)
CONFIG_MTD_AMDSTD
  This option enables support for flash chips using AMD-compatible
  commands, including some which are not CFI-compatible and hence
  cannot be used with the CONFIG_MTD_CFI_AMDSTD option.

  It also works on AMD compatible chips that do conform to CFI.

CFI Flash device mapped on StrongARM SA11x0
CONFIG_MTD_SA1100
  This enables access to the flash chips on most platforms based on
  the SA1100 and SA1110, including the Assabet and the Compaq iPAQ.
  If you have such a board, say 'Y'.

#
# Add built-in commands
#
CONFIG_CMD_MEM
  Say 'Y' add a 'mem' command. It is a command that read, write,
  copy, compare contents in the RAM.

CONFIG_MEMORY_RAM_TEST
  Say 'Y' add a 'mem test' command. 

CONFIG_CMD_PARAM
  Say 'Y' add a 'param' command. It is a command that manage 
  vivi paramters.

CONFIG_CMD_PART
  Say 'Y' add a 'part' command. It is a command that manage 
  mtd partitions.

CONFIG_CMD_BONFS
  Say 'Y' add a 'bon' command. It is a command that read bon 
  partition information and define bon partition.


#
# System hacking
#

VIVI low-level debugging functions
CONFIG_DEBUG_LL
  Say Y here to include definitions of printchar, printhex
  in the vivi.  This is helpful if you are debugging code that
  executes before the console is initialized.
